import 'package:flutter/material.dart';
import 'package:go_router/go_router.dart';
import 'package:website1/pages/foundation/foundation_page.dart';

import '../../contact_page.dart';
import '../../pages/error/error_page.dart';
import '../../pages/foundation/root_page.dart';
import '../../pages/home/home_page.dart';
import '../../pages/profile/profile_page.dart';
import 'constants.dart';

class RouteConfig {
  static final _parentKey = GlobalKey<NavigatorState>();
  static final _shellKey = GlobalKey<NavigatorState>();

  static GoRouter returnRouter(bool isAuth) {
    GoRouter router = GoRouter(
      redirect: (BuildContext context, GoRouterState state) {
        if (isAuth) {
          return RouteConst.FOUNDATION_PAGE;
        }
      },
      navigatorKey: _parentKey,
      routes: [
        ShellRoute(
          navigatorKey: _shellKey,
          builder: (context, state, child) {
            return RootLayout(child: child);
          },
          routes: [
            GoRoute(
              name: RouteConst.FOUNDATION_PAGE,
              path: RouteConst.FOUNDATION_PAGE,
              pageBuilder: (context, state) {
                return MaterialPage(child: FoundationPage());
              },
            ),
            GoRoute(
              name: RouteConst.HOME_PAGE,
              path: RouteConst.HOME_PAGE,
              pageBuilder: (context, state) {
                return MaterialPage(child: HomePage());
              },
            ),
            GoRoute(
              name: RouteConst.PROFILE_PAGE,
              path: '/profile/:username/:userid',
              pageBuilder: (context, state) {
                return MaterialPage(
                    child: ProfilePage(
                  userid: state.params['userid']!,
                  username: state.params['username']!,
                ));
              },
            ),
            GoRoute(
              name: RouteConst.CONTACT_PAGE,
              path: RouteConst.CONTACT_PAGE,
              pageBuilder: (context, state) {
                return NoTransitionPage(
                    key: state.pageKey, child: ContactPage());
              },
            )
          ],
        ),
      ],
    );
    return router;
  }
}

// errorPageBuilder: (context, state) {
//   return MaterialPage(child: ErrorPage());
// },
// redirect: (context, state) {
//   if (!isAuth &&
//       state.location
//           .startsWith('/${MyRouteConstants.profileRouteName}')) {
//     return context.namedLocation(MyRouteConstants.contactUsRouteName);
//   } else {
//     return null;
//   }
// },